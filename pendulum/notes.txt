Try training with gravity of 12 and see if it can solve it and then test different gravity
Try training with gravity of 13 and see if it can solve it and then test different gravity

summarize pendulum gravity

grav = 9.81
- works between g = 1 - g = 11
- might work at g = 12

grav = 12
- best is g=1 - g=15
- can still do g=1 - g=12
- begins to start failing the smaller gravity (g=1 - g=9)
- some can only pass the ones around it (g=11, 12, 13)

grav = 13
- can only solve up to g=14
- can go down to g=12
- only one went from g=1 - g=13
- usually only g=12 - g=14

grav = 15
- only works at g=15 mabye g=14
- never g=16
- fails to work on the lower grav becuase too much force used

grav = 16
- exclusively works at g=16

grav = 17
- can not solve

test gravity for grav


structure python files:
helpers.py contain the functions
run.py imports functions from helpers.py and runs, defines main and runs it
make packages (python files in folder with __init__.py)

ideas ive cooked up for file organization
break down into packages
put functions for solving into different modules
put functions for writing to excel and graphs into modules

https://github.com/yngvem/python-project-structure 
https://godatadriven.com/blog/a-practical-guide-to-setuptools-and-pyproject-toml/ 


try using the compute canada and try running it
test it with gravity as well

Work on poster 
begin testing the memory pendulum using gravity

Future work
Build policy for dynamic task

Evolving memory module we will be able to build policies to adapt dynamic environment (gravity change)

Basically a pendulum that can adapt to gravitational change

Problem approach methodology

SUBTITLES
- Introduction/backgroundt
- Materials and methods
- Results
- Future work and next steps
- Conclusions

PICTURE TO INCLUDE
- tree graph of best individual compare (recursive and memory index)
- Graph graph of best individual (recurisve or memory index)
- Picutres displaying how the pendulum works
    - 4 pictures that can act as like frames in fps
- For tables you can used
    - Gravity table
    - Organized result table of the best one (basic gen = 30, pop = 200) (only include test #, passed/failed, tree, ftiness)
    - raw data (probably not he best pick)

THINGS TO ASK ABOUT 
- refereces and investigation
- title to put for Dr. Kelly
- ask Dr. Kelly about intro, houw should we phrase why we decided to study it

avg size of tree
avg fitness score
success chance
average number of evals
NUMBEr OF GENS 
POPULATION


TO DO 

TEST FULLY OBSERVALBE AND TEST Gravity

in fully observable evalIndividual
    Change the trunc to 300


Start inputting data into excel excel_sheets
test whether you can git push on compute canada so you can edit the github and create scripts